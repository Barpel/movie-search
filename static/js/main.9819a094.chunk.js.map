{"version":3,"sources":["components/NavBar/NavBar.js","components/MoviePreview/MoviePreview.js","components/MovieList/MovieList.js","components/CustomError/CustomError.js","pages/HomePage/HomePage.js","pages/MovieDetails/MovieDetails.js","pages/AboutPage/AboutPage.js","App.js","serviceWorker.js","services/MovieService.js","store/MovieStore.js","index.js","store/RootStore.js"],"names":["NavBar","inject","observer","searchMovies","ev","preventDefault","searchTerm","target","search","value","_this","props","location","pathname","history","push","store","movieStore","validateSearch","fetchMovies","toggleError","toggleMenu","menuOpen","react_default","a","createElement","className","NavLink","to","index_es","icon","faFilm","onSubmit","this","placeholder","name","type","faSearch","onClick","faBars","exact","activeClassName","Component","observable","withRouter","MoviePreview_MoviePreview","movie","Link","concat","imdbID","src","Poster","alt","Title","Year","MovieList_MovieList","movies","map","idx","key","CustomError_CustomError","faTimesCircle","txt","HomePage","length","Fragment","loadMoreMovies","canShowMoreMovies","clearSearch","errorStatus","show","MovieDetails","movieId","match","params","fetchMovieDetails","Rated","Runtime","Genre","Released","faStar","imdbRating","imdbVotes","Director","Writer","Actors","href","rel","Plot","Country","Language","Metascore","BoxOffice","Awards","Production","DVD","Ratings","rating","Source","Value","AboutPage","faEnvelope","faLinkedin","faGithubSquare","App","BrowserRouter","components_NavBar_NavBar","Switch","Route","path","component","Boolean","window","hostname","MovieService","getMovies","term","page","arguments","undefined","axios","get","then","res","data","getMovieDetails","MovieStore","action","bound","rootStore","Object","classCallCheck","initializerDefineProperty","MovieStore_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","setTimeout","_this2","Search","_this3","computed","RootStore","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9819a094.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nimport './NavBar.scss';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faFilm, faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { observable } from 'mobx';\r\n\r\n@inject('store')\r\n@observer\r\nclass NavBar extends Component {\r\n    \r\n    @observable\r\n    menuOpen = false;\r\n\r\n    searchMovies = ev => {\r\n        ev.preventDefault();\r\n        let searchTerm = ev.target.search.value;\r\n        if (this.props.location.pathname !== '/') {\r\n            this.props.history.push('/')\r\n        }\r\n        this.props.store.movieStore.validateSearch(searchTerm)\r\n            ? this.props.store.movieStore.fetchMovies(searchTerm)\r\n            : this.props.store.movieStore.toggleError('Search term must contain more than 3 characters');\r\n        ev.target.search.value = '';\r\n    }\r\n\r\n    toggleMenu = ()=>{\r\n        this.menuOpen = !this.menuOpen\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <header className=\"nav-bar\" >\r\n                <div>\r\n                    <h2 className=\"logo\">\r\n                        <NavLink to=\"/\" >\r\n                            <FontAwesomeIcon icon={faFilm} />\r\n                            Movie Search\r\n                        </NavLink>\r\n                    </h2>\r\n                    <form onSubmit={this.searchMovies}>\r\n                        <input placeholder=\"Search\" name=\"search\" />\r\n                        <button type=\"submit\">\r\n                            <FontAwesomeIcon icon={faSearch} />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <nav>\r\n                    <button className=\"menu-btn\" onClick={this.toggleMenu}>\r\n                        <FontAwesomeIcon icon={faBars}/>\r\n                    </button>\r\n                    <ul className={\r\n                        this.menuOpen\r\n                        ?'show'\r\n                        :'hide'\r\n                    }>\r\n                        <li>\r\n                            <NavLink exact activeClassName=\"active-link\" to=\"/\">Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink activeClassName=\"active-link\" to=\"/about\">About</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withRouter(NavBar);","import React from 'react';\r\nimport './MoviePreview.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default props => {\r\n    const { movie } = props\r\n    return (\r\n        <li className=\"movie-preview\">\r\n            {\r\n                movie &&\r\n                <Link to={`/movie/${movie.imdbID}`}>\r\n                    <div>\r\n                        <img src={\r\n                            movie.Poster !== 'N/A'\r\n                                ? movie.Poster\r\n                                : 'http://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png'\r\n                        } alt=\"Poster\" />\r\n                        <h2>{movie.Title}</h2>\r\n                        <h2>Year: {movie.Year}</h2>\r\n                        <span>Details</span>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './MovieList.scss';\r\nimport MoviePreview from '../MoviePreview/MoviePreview';\r\n\r\nexport default props => {\r\n    return (\r\n        <ul className=\"movie-list\">\r\n            {\r\n                props.movies &&\r\n                props.movies.map((movie, idx) =>\r\n                    <MoviePreview movie={movie} key={idx} />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\nimport './CustomError.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"custom-error\">\r\n            <h1>\r\n                <FontAwesomeIcon icon={faTimesCircle} />\r\n                {' '+ props.txt}\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './HomePage.scss';\r\n\r\nimport MovieList from '../../components/MovieList/MovieList';\r\n\r\nimport CustomError from '../../components/CustomError/CustomError';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilm } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n    movieStore = this.props.store.movieStore\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"home-page\">\r\n                {\r\n                    !this.movieStore.movies.length &&\r\n                    <React.Fragment>\r\n                        <h1>\r\n                            Welcome to\r\n                            &nbsp;\r\n                            <span>\r\n                                <FontAwesomeIcon icon={faFilm} />\r\n                                Movie Search!\r\n                                </span>\r\n                            <br />\r\n                            <NavLink to=\"/about\">Learn more</NavLink> about what you can do here or search for your favorite movie!\r\n                        </h1>\r\n                    </React.Fragment>\r\n                }\r\n                {\r\n                    this.movieStore.movies &&\r\n                    < MovieList movies={this.movieStore.movies} />\r\n                }\r\n                {\r\n                    this.movieStore.movies.length > 0 &&\r\n                    <React.Fragment>\r\n\r\n                        <button\r\n                            onClick={this.movieStore.loadMoreMovies}\r\n                            className={\r\n                                this.movieStore.canShowMoreMovies\r\n                                    ? 'load-more'\r\n                                    : 'load-more disabled'\r\n                            }\r\n                        >Load More</button>\r\n                        <button onClick={this.movieStore.clearSearch} className=\"clear-search-btn\">Clear Search</button>\r\n                    </React.Fragment>\r\n                }\r\n                {\r\n                    this.movieStore.errorStatus.show &&\r\n                    <CustomError txt={this.movieStore.errorStatus.txt} />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n};\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieDetails.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilm, faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject('store')\r\n@observer\r\nclass MovieDetails extends Component {\r\n    movieStore = this.props.store.movieStore;\r\n\r\n    async componentDidMount() {\r\n        const { movieId } = this.props.match.params;\r\n        await this.movieStore.fetchMovieDetails(movieId);\r\n    }\r\n\r\n    render() {\r\n        const { movie } = this.movieStore;\r\n        return (\r\n            <section className=\"movie-details\">\r\n                <Link to=\"/\">Back</Link>\r\n                {\r\n                    movie &&\r\n                    <React.Fragment>\r\n                        <h1>\r\n                            <FontAwesomeIcon icon={faFilm}/>\r\n                            {' ' + movie.Title}\r\n                            <span>({movie.Year})</span>\r\n                        </h1>\r\n                        <h3>\r\n                            <span>{movie.Rated} |</span>\r\n                            <span>{movie.Runtime} |</span>\r\n                            <span>{movie.Genre} |</span>\r\n                            <span>{movie.Released} </span>\r\n                        </h3>\r\n                        <img src={movie.Poster} alt=\"Poster\" />\r\n                        <div className=\"movie-details-top-right\">\r\n                            <h4>\r\n                                <FontAwesomeIcon icon={faStar}/>\r\n                            {' ' + movie.imdbRating} ({movie.imdbVotes})\r\n                        </h4>\r\n                            <h4>\r\n                                Director: {movie.Director}\r\n                                <br />\r\n                                Writer: {movie.Writer}\r\n                            </h4>\r\n                            <h4>Actors: {movie.Actors}</h4>\r\n                            <a href={`https://www.imdb.com/title/${movie.imdbID}`}\r\n                                target=\"_blank\" rel=\"noopener noreferrer\">IMDB</a>\r\n                        </div>\r\n                        <h5>Plot: {movie.Plot}</h5>\r\n                        <h5>\r\n                            Country: <span>{movie.Country}</span>\r\n                        </h5>\r\n                        <h5>\r\n                            Languages: <span>{movie.Language}</span>\r\n                        </h5>\r\n                        <h5>Metascore: {movie.Metascore}</h5>\r\n                        <h5>Box Office: {movie.BoxOffice}</h5>\r\n                        <h5>Awards: {movie.Awards}</h5>\r\n                        <h5>Production: {movie.Production}</h5>\r\n                        <h5>DVD Release: {movie.DVD}</h5>\r\n                        <div className=\"ratings\">\r\n                            <h2>Ratings:</h2>\r\n                            <div>\r\n                                {\r\n                                    movie.Ratings.map((rating, idx) => {\r\n                                        return <h3 key={idx}>{rating.Source} : <FontAwesomeIcon icon={faStar}/> {rating.Value} </h3>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                }\r\n                <Link to=\"/\">Back</Link>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieDetails;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './AboutPage.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFilm, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class AboutPage extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"about-page\">\r\n                <h1>About <FontAwesomeIcon icon={faFilm} /><span className=\"logo\">Movie Search</span></h1>\r\n                <h2>\r\n                    Welcome to\r\n                    &nbsp;\r\n                    <FontAwesomeIcon icon={faFilm} />\r\n                    <span className=\"logo\">Movie Search!</span>\r\n                    <br />\r\n                    The online platform that enables you to search for information on your favorite movies.\r\n                    <br />\r\n                    Based on <a href=\"http://omdbapi.com/\" target=\"_blank\" rel=\"noopener noreferrer\">OMDb's API</a>, you can find information on the movie's cast, debuts, reviews and more.\r\n                    <br />\r\n                    It's simple to use, and has all the information you might need on movies.\r\n                    <br />\r\n                    Just type in your movie's name inside the textarea on top.\r\n                    </h2>\r\n                <br />\r\n                <h1>About Me</h1>\r\n                <h2>\r\n                    Hi, I'm Bar Peled and I'm a fan of the Marvel Universe.\r\n                        <br />\r\n                    My professional time is normally spent developing advanced Full Stack progressive web applications.\r\n                        <br />\r\n                    I specialize developing in HTML5, CSS3, Sass, JavaScript, React, Vue, Angular and jQuery.\r\n                        <br />\r\n                    I also develop using Node.JS, MongoDB, MySQL and GraphQL.\r\n                        <br />\r\n                    My free time, on the other hand, is usually spent on the dance floor, practicing my Salsa steps.\r\n                        <br />\r\n                    Happy to connect!\r\n                    </h2>\r\n                <h3>\r\n                    <a href=\"mailto:ibarpeled@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FontAwesomeIcon icon={faEnvelope} />\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/peled-bar/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FontAwesomeIcon icon={faLinkedin} />\r\n                    </a>\r\n                    <a href=\"https://github.com/Barpel?tab=repositories\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FontAwesomeIcon icon={faGithubSquare} />\r\n                    </a>\r\n                </h3>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.scss';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\n\nimport NavBar from './components/NavBar/NavBar';\n\nimport HomePage from './pages/HomePage/HomePage';\nimport MovieDetails from './pages/MovieDetails/MovieDetails';\nimport AboutPage from './pages/AboutPage/AboutPage';\n\n\n\n@inject('store')\n@observer\nclass App extends Component {\n\n  searchMovies = ev => {\n    ev.preventDefault();\n    let searchTerm = ev.target.search.value;\n    this.props.store.movieStore.validateSearch(searchTerm)\n      ? this.props.store.movieStore.fetchMovies(searchTerm)\n      : this.props.store.movieStore.toggleError('Search term must contain more than 3 characters');\n    ev.target.search.value = '';\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/movie/:movieId\" component={MovieDetails} />\n            <Route path=\"/about\" component={AboutPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\n\r\nfunction getMovies(term, page = 1) {\r\n    return axios.get(`http://www.omdbapi.com/?apikey=d777cf78&s=${term}&type=movie&page=${page}`)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction getMovieDetails(movieId) {\r\n    return axios.get(`http://www.omdbapi.com/?apikey=d777cf78&i=${movieId}`)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction validateSearch(term) {\r\n    return term.length >= 3;\r\n}\r\n\r\nexport default {\r\n    getMovies,\r\n    validateSearch,\r\n    getMovieDetails\r\n}\r\n","import { observable, action, computed } from 'mobx';\r\nimport MovieService from '../services/MovieService';\r\n\r\nexport default class MovieStore {\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable\r\n    errorStatus = { show: false, txt: '' };\r\n\r\n    @observable\r\n    searchTerm = null;\r\n\r\n    @observable\r\n    page = 1;\r\n\r\n    @observable\r\n    movie = null;\r\n\r\n    @observable\r\n    movies = [];\r\n\r\n    @computed\r\n    get canShowMoreMovies() {\r\n        return this.movies.length === 10;\r\n    }\r\n\r\n    @action.bound\r\n    toggleError(txt) {\r\n        this.errorStatus = { show: true, txt };\r\n        setTimeout(() => {\r\n            this.errorStatus = { show: false, txt: '' };\r\n        }, 4000);\r\n    }\r\n\r\n    @action.bound\r\n    loadMoreMovies() {\r\n        if (this.canShowMoreMovies) {\r\n            this.page++;\r\n            MovieService.getMovies(this.searchTerm, this.page)\r\n                .then(res => this.movies = res.Search)\r\n        }\r\n    }\r\n\r\n    @action.bound\r\n    fetchMovies(term) {\r\n        this.searchTerm = term;\r\n        this.page = 1;\r\n        MovieService.getMovies(this.searchTerm)\r\n            .then(res => {\r\n                this.movies = res.Search\r\n            });\r\n    }\r\n\r\n    @action.bound\r\n    clearSearch() {\r\n        this.movies = [];\r\n    }\r\n\r\n    @action\r\n    async fetchMovieDetails(movieId) {\r\n        this.movie = await MovieService.getMovieDetails(movieId);\r\n    }\r\n\r\n    @action\r\n    validateSearch(term) {\r\n        return MovieService.validateSearch(term);\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react';\n\nconst rootStore = new RootStore();\n\nReactDOM.render(\n    <Provider store={rootStore}>\n        <React.Fragment>\n            <App />\n        </React.Fragment>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import MovieStore from './MovieStore';\r\n\r\nexport default class RootStore{\r\n    constructor() {\r\n        this.movieStore = new MovieStore(this);\r\n    }\r\n}"],"sourceRoot":""}